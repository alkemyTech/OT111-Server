plugins {
    id 'org.springframework.boot' version '2.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "8.3.0"
    id 'jacoco'
}

group = 'com.alkemy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.sendgrid:sendgrid-java:4.8.0'
    implementation 'org.mockito:mockito-core:4.1.0'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'org.assertj:assertj-core:3.21.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'com.amazonaws:aws-java-sdk:1.12.126'

    implementation 'org.springdoc:springdoc-openapi-ui:1.5.13'

    implementation 'org.flywaydb:flyway-core'
}

flyway {
    driver = 'org.postgresql.Driver'
    user = 'postgres'
    password = 'postgres'
    url = 'jdbc:postgresql://localhost:5432/ot111_ong'
    locations = [
            'classpath:db/migration'
    ]
    schemas = ['public']
    cleanDisabled = false
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/OngApplication.class'])
        }))
    }
}
